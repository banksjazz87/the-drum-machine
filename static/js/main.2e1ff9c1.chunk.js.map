{"version":3,"sources":["index.js"],"names":["playMedia","soundFile","document","getElementById","play","Title","id","React","Component","DrumButton","props","state","tabIndex","onKeyDown","this","mediaOnKeyDown","class","onClick","buttonOnClick","soundMaker","label","className","src","media","type","mediaType","TextDisplay","globalOnKeyDown","content","DrumPad","handlingOnKeyDown","event","keyCode","setState","drum","handleOnClick","bind","addEventListener","removeEventListener","handlerOnKeyDown","ReactDOM","render"],"mappings":"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","file":"static/js/main.2e1ff9c1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index.html';\n\n\nfunction playMedia(soundFile){\n  const x = document.getElementById(soundFile);\n  x.play();\n}\n\n\nclass Title extends React.Component{\n  render(){\n    return(\n      <div>\n        <h1 id=\"title\">The Drum Machine</h1>\n        <p id=\"instructions\">Push any button to begin, or try pushing the associated keys on your keyboard.</p>\n      </div>\n    )\n  }\n}\n  class DrumButton extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n\n      }  \n    }\n    render(){\n      return(\n        <div tabIndex=\"0\" \n              onKeyDown={this.props.mediaOnKeyDown}>\n          <button\n            class=\"buttons\"\n            onClick={() => {this.props.buttonOnClick(this.props.soundMaker);\n            playMedia(this.props.label);}} \n          >\n            {this.props.label}\n\n                <audio className=\"clip\" id={this.props.label}>\n                    <source src={this.props.media} type={this.props.mediaType}/>\n                    Your browser does not support the audio element.\n                </audio>\n          </button>\n        </div>\n      );\n    }\n  }\n  \n  class TextDisplay extends React.Component{\n    render(){\n      return(\n        <div onKeyDown={this.props.globalOnKeyDown}>\n          <h1 class=\"text-display\">{this.props.content}</h1>\n        </div>\n      )\n    }\n  }\n\n  class DrumPad extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        drum:\"\"\n      }\n  \n      this.handleOnClick = this.handleOnClick.bind(this);\n      this.handlingOnKeyDown = this.handlingOnKeyDown.bind(this);\n    }\n\n    handleOnClick(type){\n      this.setState({\n        drum: type\n      });\n    }\n\n    handlingOnKeyDown = (event) => {\n      // eslint-disable-next-line\n      switch(event.keyCode) {\n        case 81 :\n          playMedia(\"Q\");\n          this.setState({\n            drum: \"Conga\" \n          });\n          break;\n        case 87 :\n          playMedia(\"W\");\n          this.setState({\n            drum: \"Crash\"\n          });\n          break;\n        case 69:\n          playMedia(\"E\");\n          this.setState({\n           drum: \"Fall-Fx\"\n          });\n          break;\n        case 65:\n          playMedia(\"A\");\n          this.setState({\n            drum: \"Hi-Hat\"\n          });\n          break;\n        case 83:\n          playMedia(\"S\");\n          this.setState({\n            drum: \"Kick\"\n          });\n          break;\n        case 68:\n          playMedia(\"D\");\n          this.setState({\n            drum: \"Tom\"\n          });\n          break;\n        case 90:\n          playMedia(\"Z\");\n          this.setState({\n            drum: \"Snare\"\n          });\n          break;\n        case 88:\n          playMedia(\"X\");\n          this.setState({\n            drum: \"Syh-Tom\"\n          });\n            break;\n        case 67:\n          playMedia(\"C\");\n          this.setState({\n            drum: \"Synth-Tom\"\n          });\n            break;\n      }\n    };\n\n    componentDidMount(){\n      document.addEventListener(\"keyDown\", this.handlingOnKeyDown);\n    }\n\n    componentWillUnmount(){\n      document.removeEventListener(\"keyDown\", this.handlingOnKeyDown)\n    }\n\n    render(){\n      return(\n    <div id=\"project\">\n          <Title />\n        <div id=\"drum-machine\" >\n          <DrumButton \n            class=\"drum-pad\" \n            label=\"Q\" \n            soundMaker=\"Conga\" \n            buttonOnClick={this.handleOnClick} \n            media=\"/index.drum-kit-sounds/Conga_1.wav\" mediaType=\"audio/wav\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n\n          <DrumButton \n            class=\"drum-pad\" \n            label=\"W\" \n            soundMaker=\"Crash\" \n            buttonOnClick={this.handleOnClick} \n            media=\"/index.drum-kit-sounds/Crash_2.wav\" mediaType=\"audio/wav\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n\n          <DrumButton \n            class=\"drum-pad\" \n            label=\"E\" \n            soundMaker=\"Fall-Fx\" \n            buttonOnClick={this.handleOnClick} \n            media=\"/index.drum-kit-sounds/Fall_FX14.WAV\" mediaType=\"audio/WAV\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n\n      \n          <DrumButton \n            class=\"drum-pad\" \n            label=\"A\" \n            soundMaker=\"Hi-Hat\" \n            buttonOnClick={this.handleOnClick} \n            media=\"/index.drum-kit-sounds/Hihat4_closed.wav\" \n            mediaType=\"audio/wav\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n\n          <DrumButton \n            class=\"drum-pad\" \n            label=\"S\" \n            soundMaker=\"Kick\" \n            buttonOnClick={this.handleOnClick} \n            media=\"/index.drum-kit-sounds/Kick.wav\" mediaType=\"audio/wav\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n\n          <DrumButton \n            class=\"drum-pad\" \n            label=\"D\" \n            soundMaker=\"Tom\" \n            buttonOnClick={this.handleOnClick} \n            media=\"/index.drum-kit-sounds/N-Tom1.wav\" mediaType=\"audio/wav\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n\n          <DrumButton \n            class=\"drum-pad\" \n            label=\"Z\" \n            soundMaker=\"Snare\" \n            buttonOnClick={this.handleOnClick} \n            media=\"/index.drum-kit-sounds/Snare.wav\" mediaType=\"audio/wav\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n\n          <DrumButton \n            class=\"drum-pad\" \n            label=\"X\" \n            soundMaker=\"Syh-Tom\" \n            buttonOnClick={this.handleOnClick} \n            media=\"/index.drum-kit-sounds/SyhTom01.wav\" mediaType=\"audio/wav\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n\n          <DrumButton \n            class=\"drum-pad\" \n            label=\"C\" \n            soundMaker=\"Synth-Tom\" \n            buttonOnClick={this.handleOnClick} media=\"index.drum-kit-sounds/SynthTom01.wav\" mediaType=\"audio/wav\"\n            mediaOnKeyDown={this.handlingOnKeyDown}\n          />\n         <div id=\"sound-descriptor\">\n          <TextDisplay \n            globalOnKeyDown={this.handlerOnKeyDown}\n            id=\"display\" \n            content={this.state.drum} />\n          </div>\n        </div>\n      </div>\n      );\n    }\n  }\n\n  ReactDOM.render(\n    <DrumPad />,\n    document.getElementById('root')\n  ); "],"sourceRoot":""}